Para trabajas especialmente grandes, pero sirve igual para pequeños, tiene ciertas caracteristicas: 

    Lenguaje orientado a objetos
    Es multiplataforma
    Manejo automatico de memoria
    Evolucion permanente 
    Gran demanda del mercado


sout + tab = System.out.println("Para imprimir");

Tipos de datos: 

entero = int
decimales = double 
booleanos = boolean 
caracteres = char 
cadenas de texto = string 
entero largo = long //// numeros entre (-9.223.372.036.854.775.808 y -9.223.372.036.854.775.808)


                tipo de dato

declaracion:    int numero; 
                    nombre de la variable   


OPERADORES 

aritmeticos, de operaciones matematicas: + , - , * , /
Relacionales: == , > , < . <= , => , != 
Condicionales: && (AND o y) , || (OR u o ) , ! (negacion)

/////////////////////////////

condicional if:

sintaxis basica

        int num1 = 35;
        int num2 = 20;
        
        if (num1 < num2) {
            System.out.println("num2 es mayor");
        }

/////////////////////////////

condicional if/else: 

sintaxis basica

        int num1 = 35;
        int num2 = 20;
        
        if (num1 < num2) {
            System.out.println("num2 es mayor");
        }
        else {
            System.out.println("num1 es mayor");
        }

///////////////////////////

condicional if/else anidado

        int num1 = 35;
        int num2 = 20;
        
        if (num1 > num2) {
            System.out.println("num2 es mayor");
        }
        else {

            if (num1 == num2){
                System.out.println("son iguales");
            }
            else{
                System.out.println("num1 es mayor");
            }
            
        }

///////////////////////

CONDICIONAL SWITCH

        int dia = 0; 
        String nombredia; 

        switch (dia) {
            case 1: nombredia="Lunes";
            break;
            case 2: nombredia="Martes";
            break;
            case 3: nombredia="Miercoles";
            break;
            case 4: nombredia="Jueves";
            break;
            case 5: nombredia="Viernes";
            break;
            case 6: nombredia="Sabado";
            break;
            case 7: nombredia="Domingo";
            break;
            default: nombredia="Dia invalido";
            break;
        }
        
        System.out.println("el dia es: " + nombredia);

///////////////////////////////////////////////////////////////////

EJERCICIO

        int rol ;
        
        Scanner teclado = new Scanner (System.in);
        rol = teclado.nextInt();
        
        double sueldo1 = 15890; 
        double sueldo2 = 25630.89;
        double sueldo3 = 35560.20;
        double pago;
        double pagototal;
        
        switch (rol) {
            case 1 -> {
                pago = sueldo1 * 0.1;
                pagototal = pago + sueldo1;
                System.out.println("El pago total del repositor  es de: " + pagototal);
            }
            case 2 -> {
                pago = sueldo2;
                System.out.println("El pago total del cajero  es de: " + pago);
            }
            case 3 -> {
                pago = sueldo3 * 0.11;
                pagototal = sueldo3 - pago;
                System.out.println("El pago total del supervisor  es de: " + pagototal);
            }
            default -> System.out.println("El tipo de empleado ingresado es incorrecto");        
            }


/////////////////////////

OPERADORES TERMIARIOS

Sirve para tomar decisiones simples en una sola linea de codigo
Permite tomar decisiones badas en una condicion y asignar a una variable o expresion en funcion de si la condicion es verdadera o falsa.

variable = (condicion) ? valor_si_verdadero : valor_si_falso; 

//////////////////////////

BUCLES

Permite ejecutar una porcion del codigo una cierta cantidad de veces

while : 

int cont = 0;
while (cont <=10){
    System.out.println("La condicion final del alumno es: " + cont);
    cont = cont + 1;
}

For: 

for (inicializacion; condicion, modificacion)
{
    Sentencia;
}

inicializacion: variable que inicia el ciclo.
condicion: es la que dicta cuando se termina.
modificacion: la que aumenta o disminuye 

////////////////////////////////////////////////////////////////////////

ARREGLOS

conjunto de pocisiones en memoria, que pueden guardar los mismo tipos de datos, 
y cada uno esta representado por un indice, el cual arranca desde 0,

si tengo un arreglo de 8 pocisiones, el indice arranca en 0 y termina en 7


indice  0   1   2   3   4   5   6   7
arreglo 1   2   3   4   5   6   7   8

///////////////////////////////////////////////////////////////////////

MODELO DE CAPAZ

La arquitectura en capas es un modelo de diseño de software, cuya base es la separación de las diferentes funcionalidades del 
sistema en capas o niveles, donde cada capa se encarga de un conjunto de tareas específicas y se comunica con los niveles 
adyacentes mediante interfaces bien definidas.

IGU, interfas graficas dele usuario.
Logica
Persistencia, la que ayuda con la comunicacion con la base de datos

